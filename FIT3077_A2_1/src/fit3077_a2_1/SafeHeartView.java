/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fit3077_a2_1;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.event.ActionListener;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.SwingConstants;
import javax.swing.border.Border;

/**
 *
 * @author aaronyiow97
 */
public class SafeHeartView extends javax.swing.JFrame {
    
    //private String pracID;
    private JButton stopButton;
    private JLabel patientInfo;
    
    /**
     * Creates new form SafeHeartView
     */
    public SafeHeartView() {
        initComponents();
    }
    
    public void addSearchListener(ActionListener listenForSearchButton){
        searchButton.addActionListener(listenForSearchButton);
    }
    
    public void addGoListener(ActionListener listenForGoButton){
        goButton.addActionListener(listenForGoButton);
    }
    
    public void addStopListener(ActionListener listenForStopButton){ 
        stopButton.addActionListener(listenForStopButton);
    }
    
    public void setPracID(String item){
        comboPracID.addItem(item);
    }
    
    /*
    Get the Practitioner ID
    */
    public String getPracID(){
        return comboPracID.getSelectedItem().toString();
    }
    
    public void setPatientID(String item){
        Boolean exists = false;
        if (comboPatientRecord.getItemCount() > 0){
            for (int i = 0; i < comboPatientRecord.getItemCount(); i++){
                if (comboPatientRecord.getItemAt(i).equals(item)){
                    exists = true;
                }
            }
        }
        if (exists == false){
            comboPatientRecord.addItem(item);
        }
        
    }
    
    public void clearPatientCombo(){
        comboPatientRecord.removeAllItems();
    }
    
    public String getPatientID(){
        return comboPatientRecord.getSelectedItem().toString();
    }
   
    public int getTabCount(){
        int numberOfTab = jTabbedPane1.getTabCount();
        return numberOfTab;
    }
    
    public JTabbedPane getTab(){
        return jTabbedPane1;
    }
    
    public void setLabelText(JLabel textLabel,String name, String id, String age, String gender, String totalCL , String goodCL, String badCL,Boolean atRisk){
        
        String comment = "";
        String zero = "0";
        if (atRisk){
            comment += "This patient is currently at risk!";
        }
        else if (totalCL.equals(zero) && goodCL.equals(zero) && badCL.equals(zero)){
            comment += "This patient has not take any measurements yet.";
        }
        else{
            comment += "This patient is currently not at risk!";
        }
        String txt = "<html> <div style=\"font-size:20px;text-align:center\"> Patient's Record</div><br/>";
        txt += "<div> &nbsp Patient's Name : " + name + "</div><br />";
        txt += "<div> &nbsp Patient's ID : " + id + "</div><br />";
        txt += "<div> &nbsp Age : " + age + "</div><br />"; 
        txt += "<div> &nbsp Gender : " + gender + "</div><br />";
        txt += "<div> &nbsp Total Cholesterol : " + totalCL + " mg/dL</div><br />";
        txt += "<div> &nbsp Good Cholesterol (HDL) : " + goodCL + " mg/dL</div><br />";
        txt += "<div> &nbsp Bad Cholesterol (LDL) : " + badCL + " mg/dL</div><br />";
        txt += "<div> &nbsp Comments : <b>" + comment + "</b></div><br />";
       
        textLabel.setText(txt);
        
    }
    
    
    
    public JLabel createNewTab(String name, String id){
        
        JPanel newJPanel = new JPanel();
        newJPanel.setName(id);
        newJPanel.setBorder(BorderFactory.createEmptyBorder(10,20,10,20));
        newJPanel.setBackground(Color.WHITE);
        newJPanel.setLayout(new BoxLayout(newJPanel,BoxLayout.LINE_AXIS));
        jTabbedPane1.addTab(name, newJPanel);
        
        Border border = BorderFactory.createLineBorder(Color.BLACK,3);
        patientInfo = new JLabel();
        patientInfo.setName("patientInfo");
        patientInfo.setBorder(border);
        newJPanel.add(patientInfo);
        
        
        newJPanel.add(Box.createHorizontalStrut(100));
        stopButton = new JButton("Stop Monitoring!");
        newJPanel.add(stopButton);
       
       
        return patientInfo;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        mainTab = new javax.swing.JPanel();
        lblPracID = new javax.swing.JLabel();
        lblPatientRecords = new javax.swing.JLabel();
        comboPatientRecord = new javax.swing.JComboBox<>();
        searchButton = new javax.swing.JButton();
        goButton = new javax.swing.JButton();
        comboPracID = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainTab.setBackground(new java.awt.Color(255, 255, 255));

        lblPracID.setText("Practitioner's ID :");

        lblPatientRecords.setText("Patient's Records :");

        searchButton.setText("Search");

        goButton.setText("Go");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rsesources/logo.png"))); // NOI18N

        javax.swing.GroupLayout mainTabLayout = new javax.swing.GroupLayout(mainTab);
        mainTab.setLayout(mainTabLayout);
        mainTabLayout.setHorizontalGroup(
            mainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainTabLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(mainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPracID)
                    .addComponent(lblPatientRecords))
                .addGap(63, 63, 63)
                .addGroup(mainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(comboPatientRecord, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboPracID, 0, 285, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchButton)
                    .addComponent(goButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainTabLayout.createSequentialGroup()
                .addContainerGap(215, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(196, 196, 196))
        );
        mainTabLayout.setVerticalGroup(
            mainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainTabLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabel1)
                .addGap(59, 59, 59)
                .addGroup(mainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPracID)
                    .addComponent(searchButton)
                    .addComponent(comboPracID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(mainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientRecords)
                    .addComponent(comboPatientRecord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(goButton))
                .addContainerGap(140, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Main Tab", mainTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SafeHeartView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SafeHeartView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SafeHeartView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SafeHeartView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SafeHeartView().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboPatientRecord;
    private javax.swing.JComboBox<String> comboPracID;
    private javax.swing.JButton goButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblPatientRecords;
    private javax.swing.JLabel lblPracID;
    private javax.swing.JPanel mainTab;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
}
